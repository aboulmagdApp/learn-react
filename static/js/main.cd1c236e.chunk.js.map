{"version":3,"sources":["components/Nav/Nav.js","components/Header/Header.js","components/SearchBar/SearchBar.js","components/Home/Home.js","components/Film/Film.js","components/Films/Films.js","components/People/People.js","components/Person/Person.js","components/Planet/Planet.js","components/Planets/Planets.js","components/Sub/Sub.js","components/Main/Main.js","components/App/App.js","index.js"],"names":["Nav","props","className","activeClassName","to","Header","company","forwardRef","ref","keyword","saveSearch","onSubmit","ev","preventDefault","console","log","type","name","placeholder","term","Home","time","active","nms","Array","isArray","join","Date","toLocaleTimeString","children","Film","findFilm","useState","film","setFilm","id","useParams","useEffect","details","title","release_date","defaultProps","now","Films","list","length","map","index","path","find","item","parseInt","People","Person","person","birth_year","Planet","findPlanet","planet","setPlanet","terrain","Planets","Sub","Main","pathname","useLocation","people","setPeople","planets","setPlanets","films","setFilms","a","url","indexOf","fetch","resp","json","data","results","exact","render","App","page","setPage","setKeyword","newPath","split","sbInputRef","createRef","ReactDOM","hashType","basename","document","getElementById"],"mappings":"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","file":"static/js/main.cd1c236e.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\n\r\nimport './nav.css';\r\n\r\nexport default function Nav(props) {\r\n    return (\r\n        <nav className=\"mainnav\">\r\n            <NavLink activeClassName=\"activeLink\" to=\"/films\">Films</NavLink>\r\n            <NavLink activeClassName=\"activeLink\" to=\"/people\">People</NavLink>\r\n            <NavLink activeClassName=\"activeLink\" to=\"/planets\">Planets</NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\n/*\r\n  <nav>\r\n            {links?.map((lnk) => (\r\n                <Link lnk={lnk} key={lnk.title} />\r\n            ))}\r\n        </nav>\r\n*/","import './header.css';\r\nimport Nav from '../Nav/Nav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header(props) {\r\n\r\n    return (\r\n        <header className=\"masthead\">\r\n            <h1>\r\n                <Link to=\"/\">{props.company}</Link>\r\n            </h1>\r\n            <Nav />\r\n        </header>\r\n    )\r\n}\r\n","import './searchBar.css';\r\n\r\nimport { createRef, useEffect, forwardRef } from 'react';\r\n\r\nexport default forwardRef (function SearchBar(props, ref) {\r\n  const { keyword, saveSearch } = props;\r\n  //let inputRef = createRef(); // container for Dom Element\r\n\r\n  function submitted(ev) {\r\n    ev.preventDefault();\r\n    console.log('submitted');\r\n    //saveSearch(inputRef.current.value);\r\n  }\r\n\r\n\r\n  // useEffect(() => {\r\n  //   inputRef.current.value = keyword;\r\n  // }, [keyword, inputRef])\r\n\r\n  return (\r\n    <section className=\"searchBar\">\r\n      <form onSubmit={submitted}>\r\n        <input\r\n          type=\"text\"\r\n          ref={ref}\r\n          name=\"keyword\"\r\n          className=\"searchText\"\r\n          placeholder=\"keyword\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"searchBtn\"\r\n          name=\"searchBtn\"\r\n        >\r\n          Search\r\n        </button>\r\n      </form>\r\n      {props.term && <p>You searched for {props.term}</p>}\r\n    </section>\r\n  )\r\n});\r\n//{props.term ? <p>You searched for {props.term}</p> : ''}","import { PropTypes } from 'prop-types';\r\n\r\nexport default function Home(props) {\r\n  const { time, active, name } = props;\r\n  let nms = Array.isArray(name) ? name.join(' and '): name;\r\n  return (\r\n    <div>\r\n      <h1>Welcome {nms}, to the Home page</h1>\r\n      <p>The time is {new Date(time).toLocaleTimeString()}</p>\r\n      <p>The component is {active ? 'active' : 'NOT active'}</p>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nHome.defaultProps = {\r\n  time: Date.now(),\r\n};\r\n\r\nHome.propTypes = {\r\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\r\n  time: PropTypes.number,\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function Film({ findFilm }) {\r\n  const [film, setFilm] = useState(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setFilm(findFilm(id));\r\n  }, [findFilm, id]);\r\n\r\n  let details = (\r\n    <>\r\n      <p>{film && film.title}</p>\r\n      <p>{film && film.release_date}</p>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h2>Film Details</h2>\r\n      {film && details}\r\n    </>\r\n  );\r\n}","import { Route, NavLink } from 'react-router-dom';\r\n// import { useState, useEffect } from 'react';\r\nimport Film from '../Film/Film';\r\nimport './films.css';\r\n\r\nexport default function Films(props) {\r\n  // state inside Planets, shared to Planet via props\r\n  // second approach\r\n  const { list } = props;\r\n  // const [list, setList] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   (function getFilms() {\r\n  //     let url = 'https://swapi.dev/api/films/';\r\n  //     fetch(url)\r\n  //       .then((resp) => {\r\n  //         if (!resp.ok) throw new Error(resp.statusText);\r\n  //         return resp.json();\r\n  //       })\r\n  //       .then((data) => {\r\n  //         setList(data.results);\r\n  //       })\r\n  //       .catch(console.warn);\r\n  //   })();\r\n  // }, []);\r\n\r\n  function findFilm(id) {\r\n    return list.find((item, index) => parseInt(id) === index + 1);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"results\">\r\n        <h2>Film List</h2>\r\n\r\n        {list.length === 0 && <p>No films...</p>}\r\n        {list.map((film, index) => (\r\n          <p key={film.title}>\r\n            <NavLink activeClassName=\"activeLink\" to={`/films/${index + 1}`}>\r\n              {film.title}\r\n            </NavLink>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"details\">\r\n        <Route path=\"/films/:id\">\r\n          <Film findFilm={findFilm} />\r\n        </Route>\r\n      </div>\r\n    </>\r\n  );\r\n}","import { NavLink } from 'react-router-dom';\r\nimport './people.css';\r\n\r\nexport default function People({ list }) {\r\n  //state fetch done in Main.js and passed as props.list\r\n  //props.list also passed to Person\r\n  //destructure to get list\r\n\r\n  return (\r\n    <div className=\"results\">\r\n      <h2>People List</h2>\r\n      {list?.length === 0 && <p>No people...</p>}\r\n      {list?.map((item, index) => (\r\n        <p key={item.name}>\r\n          <NavLink activeClassName=\"activeLink\" to={`/people/${index + 1}`}>\r\n            {item.name}\r\n          </NavLink>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n}","import { useParams } from 'react-router-dom';\r\n// import { useParams, useLocation, useHistory } from 'react-router-dom';\r\n// import { useEffect, useState } from 'react';\r\n\r\nexport default function Person({ list }) {\r\n  const { id } = useParams();\r\n  // let loc = useLocation();\r\n  // let hist = useHistory();\r\n  // const id = params.id;\r\n  //synchronous search through the list array\r\n  let person = list.find((item, index) => parseInt(id) === index + 1);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Person Details {id}</h2>\r\n      {person && <p>{person.name}</p>}\r\n      {person && <p>{person.birth_year}</p>}\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function Planet({ findPlanet }) {\r\n  const [planet, setPlanet] = useState(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setPlanet(findPlanet(id));\r\n  }, [findPlanet, id]);\r\n\r\n  let details = (\r\n    <>\r\n      <p>{planet && planet.name}</p>\r\n      <p>{planet && planet.terrain}</p>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h2>Planet Details</h2>\r\n      {planet && planet.name === 'Alderaan' ? 'Too soon.' : details}\r\n    </>\r\n  );\r\n}","// import { useState, useEffect } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport Planet from '../Planet/Planet';\r\nimport './planets.css';\r\n\r\nexport default function Planets(props) {\r\n  // state inside Planets, shared to Planet via props\r\n  // second approach\r\n  const { list } = props;\r\n  // const [list, setList] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   (function getPlanets() {\r\n  //     let url = 'https://swapi.dev/api/planets/';\r\n  //     fetch(url)\r\n  //       .then((resp) => {\r\n  //         if (!resp.ok) throw new Error(resp.statusText);\r\n  //         return resp.json();\r\n  //       })\r\n  //       .then((data) => {\r\n  //         setList(data.results);\r\n  //       })\r\n  //       .catch(console.warn);\r\n  //   })();\r\n  // }, []);\r\n\r\n  function findPlanet(id) {\r\n    return list.find((item, index) => parseInt(id) === index + 1);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"results\">\r\n        <h2>Planet List</h2>\r\n\r\n        {list.length === 0 && <p>No planets...</p>}\r\n        {list.map((planet, index) => (\r\n          <p key={planet.name}>\r\n            <NavLink activeClassName=\"activeLink\" to={`/planets/${index + 1}`}>\r\n              {planet.name}\r\n            </NavLink>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"details\">\r\n        <Route path=\"/planets/:id\">\r\n          <Planet findPlanet={findPlanet} />\r\n        </Route>\r\n      </div>\r\n    </>\r\n  );\r\n}","\r\nexport default function Sub() {\r\n    return (\r\n      <section>\r\n        <p>Just a section to insert inside Home.</p>\r\n      </section>\r\n    );\r\n  }","import './main.css';\r\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\r\nimport Home from '../Home/Home';\r\nimport Films from '../Films/Films';\r\nimport People from '../People/People';\r\nimport Person from '../Person/Person';\r\nimport Planets from '../Planets/Planets';\r\nimport Sub from '../Sub/Sub';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Film from '../Film/Film';\r\n\r\nexport default function Main(props) {\r\n\r\n    const { pathname } = useLocation();\r\n    let { keyword } = props;\r\n    const [people, setPeople] = useState([]);\r\n    const [planets, setPlanets] = useState([]); //list of planets\r\n    const [films, setFilms] = useState([]); //list of films\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            let url = 'https://swapi.dev/api';\r\n            if (pathname.indexOf('/people') > -1) {\r\n                let resp = await fetch(`${url}/people?search=${keyword}`);\r\n                let data = await resp.json();\r\n                setPeople(data.results);\r\n            }\r\n            if (pathname.indexOf('/films') > -1) {\r\n                let resp = await fetch(`${url}/films?search=${keyword}`);\r\n                let data = await resp.json();\r\n                setFilms(data.results);\r\n            }\r\n            if (pathname.indexOf('/planets') > -1) {\r\n                let resp = await fetch(`${url}/planets?search=${keyword}`);\r\n                let data = await resp.json();\r\n                setPlanets(data.results);\r\n            }\r\n        })();\r\n    }, [pathname, keyword]); //run this each time the route changes\r\n\r\n    return (\r\n        <div className=\"mainContainer\">\r\n            <Switch>\r\n                <Route path=\"/films\">\r\n                    <Films list={films} />\r\n                    <Route path=\"/films/:id\">\r\n                        <Film list={films} />\r\n                    </Route>\r\n                </Route>\r\n                <Route path=\"/people\">\r\n                    <People list={people} />\r\n                    <Route path=\"/people/:id\">\r\n                        <Person list={people} />\r\n                        {/* Person is passed prop with fetch results */}\r\n                    </Route>\r\n                </Route>\r\n\r\n                <Route path=\"/planets\">\r\n                    <Planets list={planets}/>\r\n                </Route>\r\n                <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={() => {\r\n                        let name = 'aboulmgd'\r\n                        return (\r\n                            <Home name={name} active={false} time={new Date() - 50000000}>\r\n                                <Sub />\r\n                                <Sub />\r\n                            </Home>\r\n                        );\r\n                    }}\r\n                />\r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\nimport Header from '../Header/Header';\nimport SearchBar from '../SearchBar/SearchBar';\nimport { useState, useEffect, createRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Main from '../Main/Main';\n\nfunction App() {\n  const name = 'Company Name';\n  const { pathname } = useLocation();\n  const [page, setPage] = useState(pathname);\n  const [keyword, setKeyword] = useState('');\n\n  function saveSearch(term) {\n    setKeyword(term);\n  }\n\n  useEffect(() => {\n    let newPath = pathname.split('/')[1];\n    console.log(newPath);\n    let oldPath = page.split('/')[1];\n    if(newPath !== oldPath) {\n      setPage(pathname);\n      console.log('CHANGED the base path');\n      setKeyword('');\n    }else{\n      console.log('same base path');\n    }\n  }, [pathname, page])\n\n const sbInputRef = createRef();\n\n  return (\n    <div className=\"App\">\n      <Header company={name} />\n      <SearchBar ref={sbInputRef} keyword={keyword} saveSearch={saveSearch} />\n      <main className=\"content\">\n        <Main keyword={keyword} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter} from 'react-router-dom';  \n\nReactDOM.render(\n  <HashRouter hashType=\"hashbang\" basename=\"/aboulmagdFaceBook\">\n    <App />\n  </HashRouter>\n    ,\n  document.getElementById('root')\n);"],"sourceRoot":""}